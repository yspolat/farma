# test configurations

# ==============================================================
# Spring Datasource
# ==============================================================
spring.datasource.url=jdbc:postgresql://farmtestdb.cpqfpkmidsyc.eu-central-1.rds.amazonaws.com:5432/postgres
spring.datasource.username=dbadmin
spring.datasource.password=

spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

cloud.aws.stack.auto = false
cloud.aws.region.static=eu-central-1

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update

# Set schema
spring.jpa.properties.hibernate.default_schema=FARM
#spring.jpa.show-sql = true

# ==============================================================
# Spring Security SQL Queries
# ==============================================================
spring.queries.users-query=select email, password, active from FARM.user where email=?
spring.queries.roles-query=select u.email, r.role from FARM.user u inner join FARM.user_role ur on(u.user_id=ur.user_id) inner join FARM.role r on(ur.role_id=r.role_id) where u.email=?

# ==============================================================
# Initialize the database using data.sql script
# ==============================================================
spring.datasource.initialization-mode=always

app.message=Primary application property for ${spring.application.name} specific to TEST environment.

# Dummy Ministry of Health URL --> http://localhost:8080/service/ministerOfHealthTurkey?prescriptionCode=
DUMMY_API_URL=http://localhost:8080/service/ministryOfHealthTurkey?prescriptionCode=

